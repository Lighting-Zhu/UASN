/*
 * "Copyright (c) 2004-2005 The Regents of the University  of California.  
 * All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose, without fee, and without written agreement is
 * hereby granted, provided that the above copyright notice, the following
 * two paragraphs and the author appear in all copies of this software.
 * 
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
 * OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF
 * CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS."
 *
 * Copyright (c) 2002-2003 Intel Corporation
 * All rights reserved.
 *
 * This file is distributed under the terms in the attached INTEL-LICENSE     
 * file. If you do not find these files, copies can be found by writing to
 * Intel Research Berkeley, 2150 Shattuck Avenue, Suite 1300, Berkeley, CA, 
 * 94704.  Attention:  Intel License Inquiry.
 */

#ifndef TIME_SYNC_COMMON_H
#define TIME_SYNC_COMMON_H

typedef nx_struct timesync_msg {
  nx_uint8_t src;
  nx_uint32_t local_time;
  nx_uint32_t recv_time;
} timesync_msg_t;

typedef nx_struct timesync_broad {
	nx_uint8_t src;
	nx_uint32_t slope;
	nx_uint32_t offset;
}timesync_broad_t;


typedef nx_struct timesync_broad_3 {
	nx_uint8_t src;
	nx_uint32_t slope;
	nx_uint32_t offset;
	nx_uint32_t AC_slope;
	nx_uint32_t AC_offset;
	
}timesync_broad_3_t;

typedef nx_struct data {
	nx_uint8_t src;
//	nx_uint32_t skew;
//	nx_uint32_t offset;
	nx_uint32_t timestamp;
	nx_uint16_t data;
	
}data_t;

enum {
  AM_TS_BEACON_MSG = 6,
  AM_TS_REPLY_MSG = 52,
  AM_TS_BEACON_3_MSG = 16,
  AM_TS_REPLY_3_MSG = 56,
  AM_TS_BROAD_MSG = 28,
  AM_TS_BROAD_3_MSG = 30,
  AM_TS_DATA_BROAD_MSG = 74,
  AM_TS_DATA_2_MSG = 76,
  AM_TS_DATA_3_MSG = 78,
  AM_ = 80; //Start numbering from here 
};

#endif
